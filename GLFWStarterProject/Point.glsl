////////////////////////////////////////
// Model.glsl
////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////

#ifdef VERTEX_SHADER

uniform vec3 Position;
uniform vec3 Normal;

out vec3 fragPosition;
out vec3 fragNormal;
out vec3 color;

uniform mat4 ModelMtx=mat4(1);
uniform mat4 ModelViewProjMtx=mat4(1);

////////////////////////////////////////
// Vertex shader
////////////////////////////////////////

void main() {
	gl_Position=ModelViewProjMtx * vec4(Position,1);
	fragPosition=vec3(ModelMtx * vec4(Position,1));
	fragNormal=vec3(ModelMtx * vec4(Normal,0));
	color = Normal;
}

#endif

////////////////////////////////////////////////////////////////////////////////

#ifdef FRAGMENT_SHADER

in vec3 fragPosition;
in vec3 fragNormal;
in vec3 color;

out vec4 finalColor;

////////////////////////////////////////
// Fragment shader
////////////////////////////////////////

void main() {
	finalColor = vec4(color, 1.0f);
}

#endif

////////////////////////////////////////////////////////////////////////////////
